


Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table =  10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000



2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537 ( forign key : user id )
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: "no."
	
	
	SQL code used to arrive at answer:

select * from user where 
id  isnull or 
name isnull or 
review_count isnull or 
useful isnull or
yelping_since  isnull or 
useful isnull or
cool isnull or 
fans isnull or
average_stars isnull or
compliment_hot isnull or 
compliment_more isnull or 
compliment_profile isnull or
compliment_cute isnull or
compliment_list isnull or 
compliment_note isnull or
compliment_plain isnull or 
compliment_cool isnull or 
compliment_funny isnull or
compliment_writer isnull or
compliment_photos isnull 

+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
| id | name | review_count | yelping_since | useful | funny | cool | fans | average_stars | compliment_hot | compliment_more | compliment_profile | compliment_cute | compliment_list | compliment_note | compliment_plain | compliment_cool | compliment_funny | compliment_writer | compliment_photos |
+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
+----+------+--------------+---------------+--------+-------+------+------+---------------+----------------+-----------------+--------------------+-----------------+-----------------+-----------------+------------------+-----------------+------------------+-------------------+-------------------+
(Zero rows)
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5  	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0  	max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

select city , sum (review_count) as sum_count 
from business 
group by city 
order by sum_count  desc
	
	
	Copy and Paste the Result Below:
+-----------------+-----------+
| city            | sum_count |
+-----------------+-----------+
| Las Vegas       |     82854 |
| Phoenix         |     34503 |
| Toronto         |     24113 |
| Scottsdale      |     20614 |
| Charlotte       |     12523 |
| Henderson       |     10871 |
| Tempe           |     10504 |
| Pittsburgh      |      9798 |
| Montréal        |      9448 |
| Chandler        |      8112 |
| Mesa            |      6875 |
| Gilbert         |      6380 |
| Cleveland       |      5593 |
| Madison         |      5265 |
| Glendale        |      4406 |
| Mississauga     |      3814 |
| Edinburgh       |      2792 |
| Peoria          |      2624 |
| North Las Vegas |      2438 |
| Markham         |      2352 |
| Champaign       |      2029 |
| Stuttgart       |      1849 |
| Surprise        |      1520 |
| Lakewood        |      1465 |
| Goodyear        |      1155 |
+-----------------+-----------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	SELECT stars, 
	COUNT (stars) AS TCount
	FROM business
	WHERE  city = 'Avon'
	GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-------+--------+
	| stars | TCount |
	+-------+--------+
	|   1.5 |      1 |
	|   2.5 |      2 |
	|   3.5 |      3 |
	|   4.0 |      2 |
	|   4.5 |      1 |
	|   5.0 |      1 |
	+-------+--------+




ii. Beachwood

SQL code used to arrive at answer:

	SELECT stars, 
	COUNT (stars) AS TCount
	FROM business
	WHERE  city = 'Beachwood'
	GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
	+-------+--------+
	| stars | TCount |
	+-------+--------+
	|   2.0 |      1 |
	|   2.5 |      1 |
	|   3.0 |      2 |
	|   3.5 |      2 |
	|   4.0 |      1 |
	|   4.5 |      2 |
	|   5.0 |      5 |
	+-------+--------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

select  name ,  review_count 
from user 
group by  review_count
order by review_count 
desc 
limit 3
		
	Copy and Paste the Result Below:

+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

		

8. Does posing more reviews correlate with more fans?

Not alwyas there is a positive correlation between reviews and fans 

	Please explain your findings and interpretation of the results:

according to the below table We can note that For example, although  Yuri  is the3rd top user based on number of reveiws he is number 20 of ranking of the fans
and as well Sarah whos the 2nd based on number of reveiws not from the list of top 25 based on number of fans .

+-----------+------+--------------+
| name      | fans | review_count |
+-----------+------+--------------+
| Amy       |  503 |          609 |
| Mimi      |  497 |          968 |
| Harald    |  311 |         1153 |
| Gerald    |  253 |         2000 |
| Christine |  173 |          930 |
| Lisa      |  159 |          813 |
| Cat       |  133 |          377 |
| William   |  126 |         1215 |
| Fran      |  124 |          862 |
| Lissa     |  120 |          834 |
| Mark      |  115 |          861 |
| Tiffany   |  111 |          408 |
| Roanna    |  104 |         1039 |
| Angela    |  101 |          694 |
| .Hon      |  101 |         1246 |
| Linda     |   89 |          584 |
| Christina |   85 |          842 |
| Jessica   |   84 |          220 |
| Sui       |   78 |          754 |
| Yuri      |   76 |         1339 |
| Koizumi   |   73 |          160 |
| Michelle  |   69 |          258 |
| Mike      |   65 |          346 |
| Princeton |   64 |          376 |
| Alison    |   61 |          775 |
+-----------+------+--------------+


	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: there are "love" word more than "hate" word .

	
	SQL code used to arrive at answer:

select count (text ) as love_count
from review 
where text like "%love%"

+------------+
| love_count |
+------------+
|       1780 |
+------------+

select count (text ) as hate_count
from review 
where text like "%hate%"

+------------+
| hate_count |
+------------+
|        232 |
+------------+
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

select  name ,  fans 
from user 
order by fans
desc 
limit 10
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

city = "Toronto" 
category = "Restaurants"

i. Do the two groups you chose to analyze have a different distribution of hours?
yes 

ii. Do the two groups you chose to analyze have a different number of reviews?

yes         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

We can note that fast foods restaurant like pizza and burger restaurants are usually located in  Downtown Core & Entertainment District and take rate between 2-3 Stars 
Also they have longer working hours in morning , after and night shifts .
But majority 4-5 stars restaurants opens only at after and night shifts .


SQL code used for analysis:

select 
b.name ,
b.city  , 
c.category , 
b.stars , 
h.hours ,
b.review_count ,
b.neighborhood 
from 
business as b
inner join 
category as c
on b.id = c.business_id
inner join 
hours as h 
on b.id = h.business_id
where city = "Toronto"
and category = "Restaurants"
and  stars between 2 and 5
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed?
 List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

the ratio of reviews with the word "love" in open business is 115/127 = %90.5

the ratio of reviews with the word "love" in closed business is 12/127 = %9.5


SQL code used for analysis:

select count (is_open) , text 
from business 
inner join 
review 
on business.id = review.business_id
where is_open = 1
and text like "%love%"

        
ii. Difference 2:
    
the most 3 category of closed business are restaurants , nightlife & bars .
but the most 3 category of opened business are restaurants , shoping & food .
         
         
SQL code used for analysis:

select  count(is_open) as counter_closed_business  ,c.category 
from business as b
inner join 
category as c
on b.id = c.business_id
where is_open = 0
group by category
order by counter_closed_business desc



	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, 
clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business,
 predicting the number of fans a user will have, and so on. These are just a few examples to get you started, 
so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

Finding correlation between the busines review_count and the checkin_count to clarify that the business that get more reviews people always like to visit 
and share their checkin info and indicate that the business who got hiegher review count and check in count more likely to be still open .
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
   
I need to use the data of reviews counts from the business table then indecate the business is still open or not  .
then use the data from checkin table that contain the counts of checkin .
I merge the 2 tables based on the matching data on business id key using inner join .
sorting the output descending to show the heighest checkin_count and compare it with review_count .                     
 
                
iii. Output of your finished dataset:
      
+-------------------------------------------+---------+--------------+---------------+
| name                                      | is_open | review_count | checkin_count |
+-------------------------------------------+---------+--------------+---------------+
| Cracker Barrel Old Country Store          |       1 |         1782 |           161 |
| Courtyard Cleveland Willoughby            |       1 |          660 |            95 |
| LongHorn Steakhouse                       |       1 |          882 |            95 |
| John Christ Winery                        |       1 |          864 |            64 |
| Chagrin Valley Little Theatre             |       1 |          116 |            54 |
| Rite Aid                                  |       1 |          204 |            46 |
| Highland Square Tavern                    |       1 |           72 |            38 |
| Panda Chinese Restaurant                  |       1 |          304 |            31 |
| Atlas Cinemas                             |       1 |          184 |            29 |
| Pizza Cutter                              |       1 |          198 |            28 |
| Spudnut Shop Donuts                       |       1 |          420 |            26 |
| CVS Pharmacy                              |       1 |          114 |            25 |
| Chapman's Food Mart                       |       1 |           95 |            24 |
| Davitino's Restaurant                     |       1 |          304 |            21 |
| Stella's Pizza & Italian Restaurant       |       0 |          192 |            15 |
| Red Wagon Farm                            |       1 |          143 |            14 |
| Manakiki Golf Course-Cleveland Metroparks |       1 |           65 |            13 |
| Dairy Queen                               |       1 |           33 |            11 |
| Berkshire Hills Golf Course               |       1 |           56 |            10 |
| Brownie's Market                          |       1 |           32 |             9 |
| Days Inn Willoughby/Cleveland             |       1 |           84 |             7 |
| The Inn of Chagrin Falls                  |       1 |           18 |             6 |
| Galleria Gowns                            |       1 |           64 |             5 |
| Wah Sun                                   |       1 |           27 |             4 |
| Burger King                               |       1 |            8 |             3 |
+-------------------------------------------+---------+--------------+---------------+
(Output limit exceeded, 25 of 29 total rows shown
  
         
iv. Provide the SQL code you used to create your final dataset:

select b.name , 
b.is_open ,
sum(b.review_count) as review_count , 
sum(c.count) as checkin_count
from business as b 
inner join 
checkin as c
on b.id = c.business_id
group by b.name
order by checkin_count desc

